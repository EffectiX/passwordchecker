<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="/mnt/WDB-3gDisk/home/jorge/Projects/password-checker/packages/EffectiX/PasswordChecker/phpunit.xml.dist" tests="17" assertions="33" errors="0" failures="0" skipped="0" time="6.484574">
    <testsuite name="EffectiX Test Suite" tests="17" assertions="33" errors="0" failures="0" skipped="0" time="6.484574">
      <testsuite name="Tests\Unit\LengthTest" file="tests/Unit/LengthTest.php" tests="1" assertions="4" errors="0" failures="0" skipped="0" time="0.041279">
        <testcase name="it can evaluate length in a string" file="tests/Unit/LengthTest.php::it can evaluate length in a string" class="Tests\Unit\LengthTest" classname="Tests.Unit.LengthTest" assertions="4" time="0.041279"/>
      </testsuite>
      <testsuite name="Tests\Feature\PasswordScoreRuleTest" file="tests/Feature/PasswordScoreRuleTest.php" tests="5" assertions="5" errors="0" failures="0" skipped="0" time="3.169777">
        <testcase name="it uses password_security_score validation rule correctly with globally configured threshold in the validator and passes" file="tests/Feature/PasswordScoreRuleTest.php::it uses password_security_score validation rule correctly with globally configured threshold in the validator and passes" class="Tests\Feature\PasswordScoreRuleTest" classname="Tests.Feature.PasswordScoreRuleTest" assertions="1" time="0.684003"/>
        <testcase name="it uses default threshold validation rule correctly and fails" file="tests/Feature/PasswordScoreRuleTest.php::it uses default threshold validation rule correctly and fails" class="Tests\Feature\PasswordScoreRuleTest" classname="Tests.Feature.PasswordScoreRuleTest" assertions="1" time="0.707287"/>
        <testcase name="it validates strings based on custom threshold for password security score on weak pass" file="tests/Feature/PasswordScoreRuleTest.php::it validates strings based on custom threshold for password security score on weak pass" class="Tests\Feature\PasswordScoreRuleTest" classname="Tests.Feature.PasswordScoreRuleTest" assertions="1" time="0.511860"/>
        <testcase name="it validates strings based on custom threshold for password security score on passphrase" file="tests/Feature/PasswordScoreRuleTest.php::it validates strings based on custom threshold for password security score on passphrase" class="Tests\Feature\PasswordScoreRuleTest" classname="Tests.Feature.PasswordScoreRuleTest" assertions="1" time="0.642612"/>
        <testcase name="it validates strings based on default threshold for password security score on random string" file="tests/Feature/PasswordScoreRuleTest.php::it validates strings based on default threshold for password security score on random string" class="Tests\Feature\PasswordScoreRuleTest" classname="Tests.Feature.PasswordScoreRuleTest" assertions="1" time="0.624014"/>
      </testsuite>
      <testsuite name="Tests\Unit\CommonPatternsTest" file="tests/Unit/CommonPatternsTest.php" tests="1" assertions="5" errors="0" failures="0" skipped="0" time="3.060989">
        <testcase name="it can evaluate common patterns in presented strings" file="tests/Unit/CommonPatternsTest.php::it can evaluate common patterns in presented strings" class="Tests\Unit\CommonPatternsTest" classname="Tests.Unit.CommonPatternsTest" assertions="5" time="3.060989"/>
      </testsuite>
      <testsuite name="Tests\Unit\VarietyTest" file="tests/Unit/VarietyTest.php" tests="5" assertions="8" errors="0" failures="0" skipped="0" time="0.012370">
        <testcase name="it can evaluate variety in a weak/mid strength string" file="tests/Unit/VarietyTest.php::it can evaluate variety in a weak/mid strength string" class="Tests\Unit\VarietyTest" classname="Tests.Unit.VarietyTest" assertions="1" time="0.003230"/>
        <testcase name="it can evaluate variety in a passphrase string" file="tests/Unit/VarietyTest.php::it can evaluate variety in a passphrase string" class="Tests\Unit\VarietyTest" classname="Tests.Unit.VarietyTest" assertions="2" time="0.002540"/>
        <testcase name="it can evaluate variety in weak/mid strength string" file="tests/Unit/VarietyTest.php::it can evaluate variety in weak/mid strength string" class="Tests\Unit\VarietyTest" classname="Tests.Unit.VarietyTest" assertions="1" time="0.002278"/>
        <testcase name="it can evaluate variety in a good random string" file="tests/Unit/VarietyTest.php::it can evaluate variety in a good random string" class="Tests\Unit\VarietyTest" classname="Tests.Unit.VarietyTest" assertions="2" time="0.002170"/>
        <testcase name="it can evaluate variety in a weak string" file="tests/Unit/VarietyTest.php::it can evaluate variety in a weak string" class="Tests\Unit\VarietyTest" classname="Tests.Unit.VarietyTest" assertions="2" time="0.002152"/>
      </testsuite>
      <testsuite name="Tests\Arch\ArchTest" file="tests/Arch/ArchTest.php" tests="1" assertions="3" errors="0" failures="0" skipped="0" time="0.190402">
        <testcase name="it will not use debugging functions" file="tests/Arch/ArchTest.php::it will not use debugging functions" class="Tests\Arch\ArchTest" classname="Tests.Arch.ArchTest" assertions="3" time="0.190402"/>
      </testsuite>
      <testsuite name="Tests\Unit\EntropyTest" file="tests/Unit/EntropyTest.php" tests="4" assertions="8" errors="0" failures="0" skipped="0" time="0.009757">
        <testcase name="it calculates the correct entropy for given strings" file="tests/Unit/EntropyTest.php::it calculates the correct entropy for given strings" class="Tests\Unit\EntropyTest" classname="Tests.Unit.EntropyTest" assertions="5" time="0.003280"/>
        <testcase name="it will return 0 for a string with multiple characters that are all the same character" file="tests/Unit/EntropyTest.php::it will return 0 for a string with multiple characters that are all the same character" class="Tests\Unit\EntropyTest" classname="Tests.Unit.EntropyTest" assertions="1" time="0.002300"/>
        <testcase name="it will return 0 for a string with only one character" file="tests/Unit/EntropyTest.php::it will return 0 for a string with only one character" class="Tests\Unit\EntropyTest" classname="Tests.Unit.EntropyTest" assertions="1" time="0.002073"/>
        <testcase name="it will return 0 for an empty string" file="tests/Unit/EntropyTest.php::it will return 0 for an empty string" class="Tests\Unit\EntropyTest" classname="Tests.Unit.EntropyTest" assertions="1" time="0.002104"/>
      </testsuite>
    </testsuite>
  </testsuite>
</testsuites>
